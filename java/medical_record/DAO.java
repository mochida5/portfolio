package medical_record;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

public class DAO implements AutoCloseable {

	private Connection connection = null;

	public DAO() {
	}

	/*データベース接続を取得する。取得済みの場合は既存接続を利用する。未接続の場合は新たにコンテナから取得する*/
	public Connection getConnection() throws Exception {
		try {
			if (connection == null || connection.isClosed()) {
				InitialContext initiCtx = new InitialContext();
				DataSource ds = (DataSource) initiCtx.lookup("java:comp/env/jdbc/localDB");

				//データベース接続を取得する
				connection = ds.getConnection();
			}
		} catch (NamingException | SQLException e) {
			//もし接続取得で例外が出た場合はconnection=nullにし、発生した例外はそのまま送出する
			e.printStackTrace();
			connection = null;
			throw e;
		}
		return connection;
	}

	/* プリペアードStatementを返す*/
	public PreparedStatement getPreparedStatement(String sql) throws Exception {
		return getConnection().prepareStatement(sql);
	}

	public PreparedStatement getPreparedStatement(String sql, int autoGeneratedKeys) throws Exception {
		return getConnection().prepareStatement(sql,autoGeneratedKeys);
	}
	
	/*トランザクションのコミットを行う*/
	public void commit() throws SQLException {
		connection.commit();
	}

	/*トランザクションのロールバックを行う*/
	public void rollback() throws SQLException {
		connection.rollback();
	}

	/*データベース接続を閉じる*/
	public void close() {
		try {
			connection.close();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			connection = null;
		}
	}
}
